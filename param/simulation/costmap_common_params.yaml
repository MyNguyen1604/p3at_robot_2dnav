#origin_z: 0.0
#z_resolution: .1
#z_voxels: 0

#origin_x: -100
#x_resolution: .05
#x_voxels: 100

#origin_y: -100
#y_resolution: .05
#y_voxels: 100



obstacle_range: 2.5 #1.5 #2.5 #The "obstacle_range" parameter determines the maximum range sensor reading that will result in an obstacle being put into the costmap. Here, we have it set at 2.5 meters, which means that the robot will only update its map with information about obstacles that are within 2.5 meters of the base. 
raytrace_range: 3.0
#footprint: [[x0, y0], [x1, y1], ... [xn, yn]]

inflation_radius: 0.65 #0.15 #0.22 #For example, setting the inflation radius at 0.55 meters means that the robot will treat all paths that stay 0.55 meters or more away from obstacles as having equal obstacle cost.
transform_tolerance: 0.2
map_type: costmap 
observation_sources: laser_scan #point_cloud #The "observation_sources" parameter defines a list of sensors that are going to be passing information to the costmap separated by spaces.
laser_scan: {data_type: LaserScan, topic: /scan, marking: true, clearing: true, expected_update_rate: 0.4}
#point_cloud: {data_type: PointCloud2, topic: /camera/depth/points, marking:
#true, clearing: true, min_obstacle_height: 0.07, max_obstacle_height: 0.5}
###########Simulation###############
#point_cloud: {data_type: PointCloud, topic: /pointcloud, marking:
#true, clearing: true, min_obstacle_height: 0.07, max_obstacle_height: 0.5}
